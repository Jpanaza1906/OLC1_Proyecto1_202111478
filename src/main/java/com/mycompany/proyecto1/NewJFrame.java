/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import Analizadores.Sintactico;
import Analizadores.Lexico;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Josep
 */

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    /* VARIABLES GLOBALES */
    public Sintactico.Conjunto[] listaconjuntos;
    public Sintactico.Expresion[] listaexpresiones;
    public Sintactico.Evaluar[] listaevaluaciones;
    /* ------------------ */
    public NewJFrame() {
        initComponents();
        jLabel2.setText("");
        jLabel5.setText("");
        jButton2.setEnabled(false);
        jButton4.setEnabled(false); 
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        //INICIALIZAR CARPETA
        File directory1 = new File("src/main/java/Reportes/ARBOLES_202111478");
        File directory2 = new File("src/main/java/Reportes/AFD_202111478");
        File directory3 = new File("src/main/java/Reportes/AFND_202111478");
        File directory4 = new File("src/main/java/Reportes/ERRORES_202111478");
        File directory5 = new File("src/main/java/Reportes/SALIDAS_202111478");
        File directory6 = new File("src/main/java/Reportes/SIGUIENTES_202111478");
        File directory7 = new File("src/main/java/Reportes/TRANSICIONES_202111478");
        deleteDirectory(directory1);
        deleteDirectory(directory2);
        deleteDirectory(directory3);
        deleteDirectory(directory4);
        deleteDirectory(directory5);
        deleteDirectory(directory6);
        deleteDirectory(directory7);

        //      CONSOLA AREA TEXT
        //Redirijo los println
        try {
            System.setOut(new PrintStream(new FileOutputStream("out.log"), true) {
                    public synchronized void println(String s) {
                            if ((s != null) && (s.length() > 0)) {
                                    jTextArea2.setText(jTextArea2.getText() + " " + s + "\n");
                            }
                    }
            });
        } catch (FileNotFoundException e) {
                //  Auto-generated catch block
                e.printStackTrace();
        }

        // Redirijo las excepciones
        try {
                System.setErr(new PrintStream(new FileOutputStream("err.log"), true) {
                        public synchronized void println(String s) {
                                if ((s != null) && (s.length() > 0)) {
                                        jTextArea2.setText(jTextArea2.getText() + " " + s);
                                }
                        }
                });
        } catch (FileNotFoundException e) {
                // Auto-generated catch block
                e.printStackTrace();
        }

        // TERMINA CONSOLA AREA TEXT
    }
    public static void deleteDirectory(File directory) {
        for (File file: Objects.requireNonNull(directory.listFiles())) {
            if (file.isDirectory()) {
                deleteDirectory(file);
            } else {
                file.delete();
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("ARCHIVO");

        jButton1.setText("ABRIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("GUARDAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("GUARDAR COMO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("jLabel2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("GENERAR AUTOMATA");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("ANALIZAR ENTRADA");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("CONSOLA");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ARBOLES", "SIGUIENTES", "TRANSICIONES", "AFD", "AFND", "ERRORES", "SALIDAS" }));

        jComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jButton6.setText("VER ARCHIVO");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(185, 185, 185)))
                        .addComponent(jLabel3))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //  add your handling code here: GENERAR AUTOMATA
        jButton5.setEnabled(true);
        jTextArea2.setText("");
        try {
            Sintactico sintactico = new Sintactico(new Lexico(new BufferedReader(new StringReader(jTextArea1.getText()))));
            sintactico.parse();
            // CONVERTIR LAS LISTAS A ARRAYS PARA EL MANEJOR
            listaconjuntos = new Sintactico.Conjunto[sintactico.conj.size()];
            listaexpresiones = new Sintactico.Expresion[sintactico.expr.size()];
            listaevaluaciones = new Sintactico.Evaluar[sintactico.eval.size()];

            // PASAR CONJUNTOS
            for (int i = 0; i < listaconjuntos.length; i++) {
                listaconjuntos[i] = sintactico.conj.get(i);
            }
            // PASAR EXPRESIONES
            for (int i = 0; i < listaexpresiones.length; i++) {
                listaexpresiones[i] = sintactico.expr.get(i);
            }
            // PASAR EVALUACIONES
            for (int i = 0; i < listaevaluaciones.length; i++) {
                listaevaluaciones[i] = sintactico.eval.get(i);
            }
            expandirConjuntos();
            dividirExpresion();
            for (int i = 0; i < listaexpresiones.length;i++){
                if (!listaexpresiones[i].exp.equals("-1")){
                    crearArboles(listaexpresiones[i].titulo,listaexpresiones[i].exp);
                }
            }
            mostrarlistas();
            if(listaexpresiones.length > 0){
                jComboBox1.setEnabled(true);
                jButton6.setEnabled(true);
                for(int i=0;i<listaexpresiones.length;i++){
                    jComboBox2.addItem(listaexpresiones[i].titulo);
                }
                
                jComboBox2.setEnabled(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error fatal en compilacion de entrada");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    private void expandirConjuntos(){
        // POSIBLES CONJUNTOS       
        String letrasmin = "abcdefghijklmnñopqrstuvwxyz";
        String letrasmayus = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ";
        String chars = " !\"#$%&'()*+´-./:;<=>?@[\\]^_`{|}~";
        String numeros = "0123456789";
        for (int i = 0; i < listaconjuntos.length; i++) {
            var rango = listaconjuntos[i].rango.trim();
            var rarray = rango.toCharArray();
            if (rango.length() == 3 && (rarray[1] == '-' || rarray[1] == '~')) {
                if (letrasmin.indexOf(rarray[0]) != -1 && letrasmin.indexOf(rarray[2]) != -1) {
                    var limiteinf = letrasmin.indexOf(rarray[0]);
                    var limitesup = letrasmin.indexOf(rarray[2]);
                    String rangof = "";
                    if (limitesup > limiteinf) {
                        var lista = letrasmin.toCharArray();
                        for (int j = 0; j < letrasmin.length(); j++) {
                            if (j >= limiteinf && j <= limitesup) {
                                rangof = rangof + lista[j];
                            }
                        }
                        listaconjuntos[i].rango = rangof;
                    } else {
                        listaconjuntos[i].rango = "-1";
                        continue;
                    }

                } else if (letrasmayus.indexOf(rarray[0]) != -1 && letrasmayus.indexOf(rarray[2]) != -1) {
                    var limiteinf = letrasmayus.indexOf(rarray[0]);
                    var limitesup = letrasmayus.indexOf(rarray[2]);
                    String rangof = "";
                    if (limitesup > limiteinf) {
                        var lista = letrasmayus.toCharArray();
                        for (int j = 0; j < letrasmayus.length(); j++) {
                            if (j >= limiteinf && j <= limitesup) {
                                rangof = rangof + lista[j];
                            }
                        }
                        listaconjuntos[i].rango = rangof;
                    } else {
                        listaconjuntos[i].rango = "-1";
                        continue;
                    }
                } else if (chars.indexOf(rarray[0]) != -1 && chars.indexOf(rarray[2]) != -1) {
                    var limiteinf = chars.indexOf(rarray[0]);
                    var limitesup = chars.indexOf(rarray[2]);
                    String rangof = "";
                    if (limitesup > limiteinf) {
                        var lista = chars.toCharArray();
                        for (int j = 0; j < chars.length(); j++) {
                            if (j >= limiteinf && j <= limitesup) {
                                rangof = rangof + lista[j];
                            }
                        }
                        listaconjuntos[i].rango = rangof;
                    } else {
                        listaconjuntos[i].rango = "-1";
                        continue;
                    }
                } else if (numeros.indexOf(rarray[0]) != -1 && numeros.indexOf(rarray[2]) != -1) {
                    var limiteinf = numeros.indexOf(rarray[0]);
                    var limitesup = numeros.indexOf(rarray[2]);
                    String rangof = "";
                    if (limitesup > limiteinf) {
                        var lista = numeros.toCharArray();
                        for (int j = 0; j < numeros.length(); j++) {
                            if (j >= limiteinf && j <= limitesup) {
                                rangof = rangof + lista[j];
                            }
                        }
                        listaconjuntos[i].rango = rangof;
                    } else {
                        listaconjuntos[i].rango = "-1";
                        continue;
                    }
                } else {
                    listaconjuntos[i].rango = "-1";
                    continue;
                }
            } else {
                var serie = rango.replaceAll(",", "");
                listaconjuntos[i].rango = serie;
            }
        }
    }

    private void dividirExpresion() {        
        // SE VERIFICA SI LOS TITULOS UTILIZADOS EXISTEN, SINO SE ELIMINA LA EXPRESION
        for (int i = 0; i < listaexpresiones.length; i++) {
            ArrayList<String> titulosexp = new ArrayList<>();
            var expresion = listaexpresiones[i].exp;
            var arrayexp = expresion.toCharArray();
            var titulos = "";
            boolean title = false;
            for (int j = 0; j < arrayexp.length; j++) {
                if (arrayexp[j] == '{') {
                    title = true;
                } else if (arrayexp[j] == '}') {
                    title = false;
                    titulosexp.add(titulos);
                    titulos = "";
                }
                if (title && arrayexp[j] != '{') {
                    titulos = titulos + arrayexp[j];
                }
            }
            for (int j = 0; j < titulosexp.size(); j++) {
                boolean goodconj = false;
                for (int w = 0; w < listaconjuntos.length; w++) {
                    if (titulosexp.get(j).equals(listaconjuntos[w].titulo)) {
                        goodconj = true;
                        continue;
                    }
                }
                if (!goodconj) {
                    listaexpresiones[i].exp = "-1";
                    break;
                }
            }

        }
        String divisores = ".|*?+";
        for (int i = 0; i < listaexpresiones.length; i++) {
            var expresion = listaexpresiones[i].exp;
            var arrayexp = expresion.toCharArray();
            var nuevaexp = "";
            for (int j = 0; j < arrayexp.length; j++){
                if(divisores.indexOf(arrayexp[j]) != -1 ){
                    nuevaexp = nuevaexp + arrayexp[j] + ",";
                }
                else{                    
                    if(arrayexp[j] == '\"'){
                        if(arrayexp[j+1] == '\"'){
                            nuevaexp = nuevaexp + arrayexp[j]+ " " + arrayexp[j+1] + ",";
                            j = j + 1;
                        }
                        else{
                            nuevaexp = nuevaexp + arrayexp[j] + arrayexp[j+1] + arrayexp[j+2] + ",";
                            j = j + 2;
                        }
                    }
                    else if(arrayexp[j] == '\\'){
                        nuevaexp = nuevaexp + arrayexp[j] + arrayexp[j+1] + ",";
                        j = j + 1;
                    }
                    else if(arrayexp[j] == '}'){
                        nuevaexp = nuevaexp + ",";
                    }
                    else{
                        if(arrayexp[j] != '{'){
                            nuevaexp = nuevaexp + arrayexp[j];
                        }
                    }
                }
            }
            listaexpresiones[i].exp = nuevaexp;
        }
    }
    private void crearArboles(String titulo,String er){
        ArrayList<node> leaves = new ArrayList();
        ArrayList<ArrayList> table = new ArrayList();
        er = ".," + er + "#";

        Tree arbol = new Tree(er, leaves, table);
        node raiz = arbol.getRoot();

        raiz.getNode();
        raiz.follow();
        
        arbol.GraficarArbol(titulo); // GRAFICAR ARBOLES

        followTable ft = new followTable();        
        ft.printTable(table, titulo); // GRAFICAR TABLA SIGUIENTES

        transitionTable tran = new transitionTable(raiz, table, leaves);
        tran.impTable(titulo); // GRAFICAR TABLA TRANSICIONES
        tran.impGraph(titulo); // GRAFICAR AUTOMATA
    }
    private void mostrarlistas(){
        System.out.println("----CONJUNTOS----");
        for (int i = 0; i < listaconjuntos.length; i++) {
            System.out.println(listaconjuntos[i].titulo + " -> " + listaconjuntos[i].rango);
        }
        System.out.println("----EXPRESIONES----");
        for (int i = 0; i < listaexpresiones.length; i++) {
            System.out.println(listaexpresiones[i].titulo + " -> " + listaexpresiones[i].exp);
        }
        System.out.println("----EVALUACIONES----");
        for (int i = 0; i < listaevaluaciones.length; i++) {
            System.out.println(listaevaluaciones[i].titulo + " -> " + listaevaluaciones[i].eval);
        }
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // add your handling code here: ANALIZAR ENTRADA
        
        
        //SAnalizadorSintactico.main(entrada);
        System.out.println("Ejecutando!");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // VER ARCHIVOS DE LOS COMBOBOX
        String carpeta = jComboBox1.getSelectedItem().toString();
        String archivo = jComboBox2.getSelectedItem().toString();

        String rutaarchivo = "src/main/java/Reportes/" + carpeta + "_202111478/" + archivo + ".jpg";

        //BufferedImage img = ImageIO.read(new File(rutaarchivo));
        /*
         * //Agrega logo de inicio
        JLabel logo = new JLabel();
        ImageIcon imagen = new ImageIcon("logo.png");
        logo.setOpaque(true);
        logo.setHorizontalAlignment(SwingConstants.CENTER);
        logo.setBackground(new Color(155, 155, 155));
        logo.setBounds(0,0,this.getWidth(),this.getHeight());
        logo.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH)));
         */
        try{
            ImageIcon imagen = new ImageIcon(rutaarchivo);
            jLabel5.setOpaque(true);
            jLabel5.setHorizontalAlignment(SwingConstants.CENTER);
            jLabel5.setBackground(new Color(155,155,155));
            jLabel5.setBounds(0,0,jPanel3.getWidth(),jPanel3.getHeight());
            if(carpeta.equals("TRANSICIONES") || carpeta.equals("SIGUIENTES") || carpeta.equals("ERRORES")){
                jLabel5.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(600,600, Image.SCALE_SMOOTH)));
            }
            else if(carpeta.equals("AFD") || carpeta.equals("AFND")){
                jLabel5.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(600,300, Image.SCALE_SMOOTH)));
            }
            else if(carpeta.equals("ARBOLES")){
                jLabel5.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(400,600, Image.SCALE_SMOOTH)));
            }
            System.out.println(rutaarchivo);
        } catch (Exception e){
            System.out.println(e.getMessage());
            System.out.println("No existe el archivo aun");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // add your handling code here: ABRIR
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.OLC", "olc");

        fc.setFileFilter(filtro);

        int selec = fc.showOpenDialog(this);

        if (selec == JFileChooser.APPROVE_OPTION) {
            File fichero = fc.getSelectedFile();
            jLabel2.setText(fichero.getAbsolutePath());
            try (FileReader fr = new FileReader(fichero)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                fr.close();
                this.jTextArea1.setText(cadena);
                jButton4.setEnabled(true);
                jButton2.setEnabled(true);
            } catch (IOException e1) {
                e1.printStackTrace();
            }

        }
        else{
            jLabel2.setText("Archivo no encontrado");
        }

    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        // add your handling code here: GUARDAR
        try{
            FileWriter fw = new FileWriter(jLabel2.getText());
            fw.write(jTextArea1.getText());
            jButton4.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se guardó el archivo exitosamente", "Aviso", JOptionPane.INFORMATION_MESSAGE, null);
            fw.close();
        } catch (IOException e){
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
        // add your handling code here: GUARDAR COMO
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.OLC", "olc");
        fc.setFileFilter(filtro);
        int selec = fc.showSaveDialog(fc);
        if (selec == JFileChooser.APPROVE_OPTION){
            File fichero = fc.getSelectedFile();
            jLabel2.setText(fichero.getAbsolutePath());
            try (FileWriter fw = new FileWriter(fichero)){
                fw.write(this.jTextArea1.getText());
                fw.close();
                jButton4.setEnabled(true);
                JOptionPane.showMessageDialog(this, "Se creó y guardó el archivo exitosamente", "Aviso", JOptionPane.INFORMATION_MESSAGE, null);
            } catch (IOException e1){
                e1.printStackTrace();
            }
        }
    }// GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
